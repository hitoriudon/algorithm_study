# 1835, 카드, S4

# 1부터 N까지의 숫자가 적힌 카드가 있다. 찬유는 이 카드를 가지고 마술을 하려 한다. 마술을 하는 순서는 다음과 같다.

# 먼저 1부터 N까지의 숫자가 적힌 카드에서 첫 번째 카드를 가장 뒤로 옮긴다. 
# 그러고 나서 첫 번째 카드를 책상 위에 올려놓는다. 그런데 그 카드는 1이 되어야 한다.
# 그리고 남은 카드 중에서 첫 번째 카드를 가장 뒤로 옮기고, 또 가장 앞에 있는 카드를 가장 뒤로 옮긴다.(2번 반복) 
# 그리고 가장 앞에 있는 카드를 책상 위에 올려놓는다. 그런데 그 카드는 2가 되어야 한다.
# 또 남은 카드 중에서 첫 번째 카드를 가장 뒤로 옮기고... (3번 반복) 그리고 가장 앞에 있는 카드를 책상위에 올려놓는데 그것은 3이 된다.
# 또 남은 카드 중에서 첫 번째 카드를 가장 뒤로 옮기고.. (4번 반복) 그리고 가장 앞에 있는 카드를 책상 위에 올려놓는데 그것은 4이다.
# 위 과정을 계속 반복하여 N번 카드만 남을 때 까지 반복한다.
# 위와 같은 카드를 하려면 미리 카드의 순서를 알고 있어야 한다. 카드의 개수 N이 주어져 있을 때 위의 마술을 하기 위한 카드의 초기 순서를 구하는 프로그램을 작성하시오.

# 첫 번째 줄에 카드의 개수 N(1 ≤ N ≤ 1,000)이 주어진다.

# 첫 번째 줄부터 N번째 줄까지 차례로 카드의 순서를 출력한다.

import sys
from collections import deque
input = sys.stdin.readline

N = int(input())
cards = deque([i for i in range (N)])
answer = ['0'] * N # join() 쓰려고 element를 int가 아닌 str로.

for i in range (N):
    for j in range (i+1):
        cards.append(cards.popleft())
    answer[cards.popleft()] = str(i + 1) # join() 쓰려고 element를 int가 아닌 str로.

print(' '.join(answer)) # 정답 출력

# 역순으로 풀까 하다가, 그냥 0부터 N-1까지 배열을 선언하고 풀었다. # N = 6이라고 가정하고 설명한다.
# 처음 pop될 때 무조건 '1'이여야 하고, 두 번째 pop될 때 무조건 2여야 한다는 걸 기억해야 한다.
# 이중 for문으로, 맨 앞에서 맨 뒤로 push하는 과정을 1부터 N회까지 반복하게 한 다음에,
# cards.popleft()로 나오는 값은, 처음 1이 있어야 하는 값의 index 값을 뜻한다. (answer 배열은 초기 배열을 뜻함.)
# popleft()했을 때 그 값은 1이고, 그래서 answer 배열의 해당 index 값을 '0+1'으로 설정했다.
# 그 다음은 '2'가 무조건 나와야하고... 두 번 뒤로 보낸 뒤 popleft()하면 그 값은 4인데, 
# answer[4]의 값이 '1+1'가 되어야 한다는 뜻.. 그래서 answer[4] = '2'
# 그 다음은 3이 무조건 나와야 하고, 세 번 뒤로 보낸 뒤 popleft()하면 그 값은 3이다.
# 그래서 answer[3] = '2+1' = '3' 
# 이게 말로 하니까 어렵네 ... 