# 좌표평면 위 (0, 0)에서 북쪽을 향한 상태에서 움직이는 것을 시작하려 합니다. N개의 명령에 따라 총 N번 움직이며, 명령 L이 주어지면 왼쪽으로 90도 방향 전환을,
# 명령 R이 주어지면 오른쪽으로 90도 방향전환을 하고, 명령 F가 주어지면 바라보고 있는 방향으로 한칸 이동하려고 합니다. 
# 1초에 한 칸씩 움직이며, 회전에도 1초의 시간이 걸린다 했을 때, 몇 초 뒤에 처음으로 다시 (0, 0)에 돌아오게 되는지를 판단하는 프로그램을 작성해보세요.

# 첫 번째 줄에 문자 ‘L', ‘R', 그리고 'F’로만 이루어진 문자열이 하나 주어집니다. 단, 첫 번째 문자는 항상 'F'로 주어짐을 가정해도 좋습니다.
# 1 ≤ 명령의 길이 ≤ 100,000

# 입력: FFFRFFRFFFRFFFFFF
# 출력: 13

dxs, dys = [-1, 0, 1, 0], [0, 1, 0, -1] #북 동 남 서
x, y = 0, 0
time = 0
dir = 0
command = input()   

for c in command:
    time += 1
    if c == 'R': 
        dir = (dir + 1) % 4
    elif c == 'L':
        dir = (dir - 1) % 4
    else:
        nx, ny = x + dxs[dir], y + dys[dir]
        
        if nx == ny == 0:
            print(time)
            break
        x, y = nx, ny
else: 
    print(-1)